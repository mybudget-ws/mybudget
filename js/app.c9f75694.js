(function(){"use strict";var t={6399:function(t,e,n){var i=n(7106);const o={development:"http://localhost:3000",production:"https://api.mybudget.ws"}["production"],r=o+"/graphql";e.A={async login(t,e){const n="\n      query($email:String!, $password:String!) {\n        user:signIn(email: $email, password: $password) {\n          email\n          token\n          defaultCurrency { name }\n        }\n      }\n    ",i={email:t,password:e},o=await this.client().request(n,i);return this.log("login",o),o},async registration(t,{email:e,password:n}){const i="\n      mutation($email:String!, $password:String!) {\n        action:signUp(input: { email: $email, password: $password }) {\n          user {\n            email\n            token\n            defaultCurrency { name }\n          }\n          error\n        }\n      }\n    ",o={email:e,password:n},{action:r}=await this.client(t).request(i,o);return this.log("registration",r),r},async resetPassword({email:t}){const e="\n      mutation($email:String!) {\n        action:resetPassword(input: { email: $email }) {\n          error\n        }\n      }\n    ",n={email:t},{action:i}=await this.client().request(e,n);return this.log("reset_password",i),i},async autoSignUp(){const t="\n      query {\n        user:autoSignUp {\n          email\n          token\n          defaultCurrency { name }\n        }\n      }\n    ",e=await this.client().request(t);return this.log("autoSignUp",e),e},async fetchProfile(t){const e="\n      query {\n        user:fullProfile { email defaultCurrency { id name } }\n      }\n    ",n=await this.client(t).request(e);return this.log("fetchProfile",n),n.user},async updateProfile(t,{currency:e}){const n="\n      mutation($currency:String!) {\n        action:updateUserProfile(\n          currency: $currency\n        ) { email token defaultCurrency { id name } }\n      }\n    ",i={currency:e},o=await this.client(t).request(n,i);return this.log("updateProfile",o),o.action},async updateEmail(t,{password:e,newEmail:n}){const i="\n      mutation($password:String!, $newEmail:String!) {\n        action:updateUserEmail(input: {\n          password: $password,\n          newEmail: $newEmail\n        }) {\n          user { email token }\n          error\n        }\n      }\n    ",o={password:e,newEmail:n},{action:r}=await this.client(t).request(i,o);return this.log("updateEmail",r),r},async updatePassword(t,{password:e,newPassword:n}){const i="\n      mutation($oldPassword:String!, $newPassword:String!) {\n        action:updateUserPassword(\n          oldPassword: $oldPassword,\n          newPassword: $newPassword\n        ) { email token }\n      }\n    ",o={oldPassword:e,newPassword:n},r=await this.client(t).request(i,o);return this.log("updatePassword",r),r.action},async accounts(t){const e="{\n      items:accounts {\n        id name color kind isFavourite isHidden balance balanceBase position\n        currency { name }\n      }\n    }",n=await this.client(t).request(e);return this.log(e,n),n.items},async accountsFilter(t){const e="{\n      items:accounts { id name color isFavourite isHidden currency { name } }\n    }",n=await this.client(t).request(e);return this.log(e,n),n.items},async account(t,{id:e}){const n="query($id:ID!) {\n      item:account(id:$id) { id name color kind balance currency { name } position }\n    }",i={id:e},o=await this.client(t).request(n,i);return this.log(n,o),o.item},async createAccount(t,{name:e,color:n,kind:i,currency:o}){const r="\n      mutation($name:String!, $color:String!, $kind:String!, $currency:String!) {\n        createAccount(\n          name: $name,\n          color: $color,\n          kind: $kind,\n          currency: $currency\n        ) { id name color balance currency { name } }\n      }\n    ",a={name:e,color:n,kind:i,currency:o},s=await this.client(t).request(r,a);return this.log("createAccount",s),s.createAccount},async updateAccount(t,{id:e,name:n,color:i,kind:o,currency:r,position:a}){const s="\n      mutation(\n        $id:ID!,\n        $name:String!,\n        $color:String!,\n        $kind:String!,\n        $currency:String!,\n        $position:Int!\n      ) {\n        action:updateAccount(\n          id: $id,\n          name: $name,\n          color: $color,\n          kind: $kind,\n          currency: $currency,\n          position: $position\n        ) { id name color currency { name } position }\n      }\n    ",c={id:e,name:n,color:i,kind:o,currency:r,position:a},d=await this.client(t).request(s,c);return this.log("updateAccount",d),d.action},async destroyAccount(t,e){const n="\n      mutation($id:ID!) { action:destroyAccount(id: $id) { id } }\n    ",i=await this.client(t).request(n,{id:e});return this.log("destroyAccount",i),i.action},async categories(t){const e="{ items:categories { id name color isFavourite isHidden } }",n=await this.client(t).request(e);return this.log(e,n),n.items},async category(t,{id:e}){const n="query($id:ID!) { item:category(id:$id) { id name color } }",i={id:e},o=await this.client(t).request(n,i);return this.log(n,o),o.item},async createCategory(t,{name:e,color:n}){const i="\n      mutation($name:String!, $color:String!) {\n        action:createCategory(\n          name: $name,\n          color: $color\n        ) { id name color }\n      }\n    ",o={name:e,color:n},r=await this.client(t).request(i,o);return this.log("createCategory",r),r.action},async updateCategory(t,{id:e,name:n,color:i}){const o="\n      mutation($id:ID!, $name:String!, $color:String!) {\n        action:updateCategory(\n          id: $id,\n          name: $name,\n          color: $color\n        ) { id name color }\n      }\n    ",r={id:e,name:n,color:i},a=await this.client(t).request(o,r);return this.log("updateCategory",a),a.action},async destroyCategory(t,e){const n="mutation($id:ID!) { action:destroyCategory(id: $id) { id } }",i=await this.client(t).request(n,{id:e});return this.log("destroyCategory",i),i.action},async goals(t){const e="\n      {\n        items:goals {\n          id\n          name\n          accounts { id name color }\n          amount\n          amountPerMonth\n          currency { name }\n          dueDateOn\n          dueMonths\n          percentage\n          balance\n        }\n      }\n    ",n=await this.client(t).request(e);return this.log(e,n),n.items},async goal(t,{id:e}){const n="\n      query($id:ID!) {\n        item:goal(id:$id) {\n          id\n          name\n          amount\n          dueDateOn\n          accounts { id name color }\n          position\n        }\n      }\n    ",i={id:e},o=await this.client(t).request(n,i);return this.log(n,o),o.item},async createGoal(t,{name:e,amount:n,dueDateOn:i,accountIds:o}){const r="\n      mutation($name:String!, $amount:String!, $dueDateOn:String!, $accountIds:[Int!]!) {\n        action:createGoal(\n          name: $name,\n          amount: $amount,\n          dueDateOn: $dueDateOn,\n          accountIds: $accountIds\n        ) { id name dueDateOn }\n      }\n    ",a={name:e,amount:n,dueDateOn:i,accountIds:o},s=await this.client(t).request(r,a);return this.log("createGoal",s),s.action},async updateGoal(t,{id:e,name:n,amount:i,dueDateOn:o,accountIds:r,position:a}){const s="\n      mutation(\n        $id:ID!,\n        $name:String!,\n        $amount:String!,\n        $dueDateOn:String!,\n        $accountIds:[Int!]!,\n        $position:Int!\n      ) {\n        action:updateGoal(\n          id: $id,\n          name: $name,\n          amount: $amount,\n          dueDateOn: $dueDateOn,\n          accountIds: $accountIds,\n          position: $position\n        ) { id name position }\n      }\n    ",c={id:e,name:n,amount:i,dueDateOn:o,accountIds:r,position:a},d=await this.client(t).request(s,c);return this.log("updateGoal",d),d.action},async destroyGoal(t,e){const n="mutation($id:ID!) { action:destroyGoal(id: $id) { id } }",i=await this.client(t).request(n,{id:e});return this.log("destroyGoal",i),i.action},async projectsFilter(t){const e="{ items:projects { id name isHidden } }",n=await this.client(t).request(e);return this.log(e,n),n.items},async projects(t){const e="\n      {\n        items:projects {\n          id\n          name\n          isHidden\n          color\n          balances {\n            amount\n            amountBase\n            currency { name }\n            currencyBase { name }\n          }\n        }\n      }\n    ",n=await this.client(t).request(e);return this.log(e,n),n.items},async project(t,{id:e}){const n="query($id:ID!) { item:project(id:$id) { id name color position } }",i={id:e},o=await this.client(t).request(n,i);return this.log(n,o),o.item},async createProject(t,{name:e,color:n}){const i="\n      mutation($name:String!, $color:String!) {\n        action:createProject(\n          name: $name,\n          color: $color\n        ) { id name color balances { amount amountBase currency { name } currencyBase { name } } }\n      }\n    ",o={name:e,color:n},r=await this.client(t).request(i,o);return this.log("createProject",r),r.action},async updateProject(t,{id:e,name:n,color:i,position:o}){const r="\n      mutation($id:ID!, $name:String!, $color:String!, $position:Int!) {\n        action:updateProject(\n          id: $id,\n          name: $name,\n          color: $color,\n          position: $position\n        ) { id name color }\n      }\n    ",a={id:e,name:n,color:i,position:o},s=await this.client(t).request(r,a);return this.log("updateProject",s),s.action},async destroyProject(t,e){const n="\n      mutation($id:ID!) { action:destroyProject(id: $id) { id } }\n    ",i=await this.client(t).request(n,{id:e});return this.log("destroyProject",i),i.action},async propertiesFilter(t){const e="{ items:properties { id name isHidden } }",n=await this.client(t).request(e);return this.log(e,n),n.items},async properties(t){const e="\n      {\n        items:properties {\n          id\n          name\n          kind\n          color\n          price\n          isHidden\n          currency { name }\n        }\n      }\n    ",n=await this.client(t).request(e);return this.log(e,n),n.items},async createProperty(t,{name:e,color:n,kind:i,currency:o,amount:r}){const a="\n      mutation($name:String!, $color:String!, $kind:String!, $currency:String!, $amount:String!) {\n        action:createProperty(\n          name: $name,\n          color: $color,\n          kind: $kind,\n          currency: $currency,\n          amount: $amount\n        ) { id name color kind price currency { name } }\n      }\n    ",s={name:e,color:n,kind:i,currency:o,amount:r},c=await this.client(t).request(a,s);return this.log("createProperty",c),c.action},async property(t,{id:e}){const n="query($id:ID!) {\n      item:property(id:$id) {\n        id name color kind amount:price currency { name }\n        position\n        totalIncome\n        totalExpense\n        transactions {\n          id\n          amount\n          description\n          dateAt\n          account { id name color currency { name } }\n          categories { id name color }\n          project { id name color }\n          property { id name color }\n          isTransfer\n        }\n        prices {\n          id\n          date:dateOn\n          amount\n          description\n          currency { name }\n        }\n      }\n    }",i={id:e},o=await this.client(t).request(n,i);return this.log(n,o),o.item},async updateProperty(t,{id:e,name:n,color:i,kind:o,currency:r,amount:a,position:s}){const c="\n      mutation(\n        $id:ID!,\n        $name:String!,\n        $color:String!,\n        $kind:String!,\n        $currency:String!,\n        $amount:String!,\n        $position:Int!\n      ) {\n        action:updateProperty(\n          id: $id,\n          name: $name,\n          color: $color,\n          kind: $kind,\n          currency: $currency\n          amount: $amount,\n          position: $position\n        ) { id }\n      }\n    ",d={id:e,name:n,color:i,kind:o,currency:r,amount:a,position:s},u=await this.client(t).request(c,d);return this.log("updateProperty",u),u.action},async destroyProperty(t,e){const n="\n      mutation($id:ID!) { action:destroyProperty(id: $id) { id } }\n    ",i=await this.client(t).request(n,{id:e});return this.log("destroyProperty",i),i.action},async createPropertyPrice(t,{amount:e,date:n,propertyId:i,description:o}){const r="\n      mutation($propertyId:ID!, $amount:String!, $date:String!, $description:String) {\n        action:createPropertyPrice(\n          propertyId: $propertyId,\n          date: $date,\n          amount: $amount,\n          description: $description\n        ) { id }\n      }\n    ",a={amount:e,date:n,propertyId:i,description:o},s=await this.client(t).request(r,a);return this.log("createPropertyPrice",s),s.action},async updatePropertyPrice(t,{amount:e,date:n,propertyId:i,id:o,description:r}){const a="\n      mutation($propertyId:ID!, $id:ID!, $amount:String!, $date:String!, $description:String) {\n        action:updatePropertyPrice(\n          propertyId: $propertyId,\n          id: $id,\n          date: $date,\n          amount: $amount,\n          description: $description\n        ) { id }\n      }\n    ",s={amount:e,date:n,propertyId:i,id:o,description:r},c=await this.client(t).request(a,s);return this.log("updatePropertyPrice",c),c.action},async destroyPropertyPrice(t,{propertyId:e,id:n}){const i="\n      mutation($propertyId:ID!, $id:ID!) {\n        action:destroyPropertyPrice(\n          propertyId: $propertyId,\n          id: $id\n        ) { id }\n      }\n    ",o=await this.client(t).request(i,{propertyId:e,id:n});return this.log("destroyPropertyPrice",o),o.action},async transactions(t,{page:e,perPage:n,filters:i}){const o="\n      query(\n        $page:Int, $perPage:Int,\n        $accountIds:[Int!], $categoryIds:[Int!],\n        $projectIds:[Int!], $propertyIds:[Int!]\n      ) {\n        items:transactions(\n          page: $page,\n          perPage: $perPage,\n          accountIds: $accountIds,\n          categoryIds: $categoryIds,\n          projectIds: $projectIds,\n          propertyIds: $propertyIds\n        ) {\n          id\n          amount\n          description\n          dateAt\n          account { id name color currency { name } }\n          categories { id name color }\n          project { id name color }\n          property { id name color }\n          isTransfer\n        }\n      }\n    ",{accountIds:r,categoryIds:a,projectIds:s,propertyIds:c}=i,d={page:e,perPage:n,accountIds:r,categoryIds:a,projectIds:s,propertyIds:c},u=await this.client(t).request(o,d);return this.log("transactions",u),u.items},async transaction(t,{id:e}){const n="\n      query($id:ID!) {\n        item:transaction(id:$id) {\n          id\n          amount\n          description\n          dateAt\n          account { id name color currency { name } }\n          categories { id name color }\n          project { id name color }\n          property { id name color }\n        }\n      }\n    ",i={id:e},o=await this.client(t).request(n,i);return this.log(n,o),o.item},async createTransaction(t,{amount:e,isIncome:n,date:i,description:o,accountId:r,categoryIds:a,projectId:s,propertyId:c}){const d="\n      mutation(\n        $amount:String!,\n        $isIncome:Boolean!,\n        $date:String!,\n        $categoryIds:[Int!]!,\n        $description:String,\n        $accountId:String!,\n        $projectId:String,\n        $propertyId:String\n      ) {\n        action:createTransaction(\n          amount: $amount,\n          isIncome: $isIncome,\n          date: $date,\n          categoryIds: $categoryIds,\n          description: $description,\n          accountId: $accountId,\n          projectId: $projectId,\n          propertyId: $propertyId\n        )\n      }\n    ",u={amount:e,isIncome:n,date:i,categoryIds:a,description:o,accountId:r.toString(),projectId:s&&s.toString()||null,propertyId:c&&c.toString()||null},m=await this.client(t).request(d,u);return this.log("createTransaction",m),m.action},async updateTransaction(t,{id:e,amount:n,isIncome:i,date:o,description:r,accountId:a,categoryIds:s,projectId:c,propertyId:d}){const u="\n      mutation(\n        $id:ID!,\n        $amount:String!,\n        $isIncome:Boolean!,\n        $date:String!,\n        $categoryIds:[Int!]!,\n        $description:String,\n        $accountId:String!,\n        $projectId:String,\n        $propertyId:String\n      ) {\n        action:updateTransaction(\n          id: $id,\n          amount: $amount,\n          isIncome: $isIncome,\n          date: $date,\n          categoryIds: $categoryIds,\n          description: $description,\n          accountId: $accountId,\n          projectId: $projectId,\n          propertyId: $propertyId\n        ) { id }\n      }\n    ",m={id:e,amount:n,isIncome:i,date:o,categoryIds:s,description:r,accountId:a.toString(),projectId:c&&c.toString()||null,propertyId:d&&d.toString()||null},l=await this.client(t).request(u,m);return this.log("updateTransaction",l),l.action},async destroyTransaction(t,e){const n="\n      mutation($id:ID!) { action:destroyTransaction(id: $id) { id } }\n    ",i=await this.client(t).request(n,{id:e});return this.log("destroyTransaction",i),i.action},async createTransactionTransfer(t,{amountSrc:e,amountDst:n,accountIdSrc:i,accountIdDst:o,date:r,description:a}){const s="\n      mutation(\n        $amountSrc:String!,\n        $amountDst:String!,\n        $accountIdSrc:String!,\n        $accountIdDst:String!,\n        $date:String!,\n        $description:String\n      ) {\n        action:createTransactionTransfer(\n          amountSrc: $amountSrc,\n          amountDst: $amountDst,\n          accountIdSrc: $accountIdSrc,\n          accountIdDst: $accountIdDst,\n          date: $date,\n          description: $description\n        )\n      }\n    ",c={amountSrc:e,amountDst:n,accountIdSrc:i.toString(),accountIdDst:o.toString(),date:r,description:a},d=await this.client(t).request(s,c);return this.log("createTransactionTransfer",d),d.action},async toggleIsFavourite(t,e,n){const i="\n      mutation($id:Int!, $model:String!) {\n        action:toggleIsFavourite(id: $id, model: $model)\n      }\n    ",o=await this.client(t).request(i,{id:e,model:n});return this.log("toggleIsFavourite",o),o.action},async toggleIsHidden(t,e,n){const i="\n      mutation($id:Int!, $model:String!) {\n        action:toggleIsHidden(id: $id, model: $model)\n      }\n    ",o=await this.client(t).request(i,{id:e,model:n});return this.log("toggleIsHidden",o),o.action},async balances(t,e){const n=o+"/charts/balances?"+e,i=await fetch(n,{headers:this.headers(t)}),r=await i.json();return this.log(n,r),r},async columns(t,e){const n=o+"/charts/columns?"+e,i=await fetch(n,{headers:this.headers(t)}),r=await i.json();return this.log(n,r),r},async donuts(t,e){const n=o+"/charts/donuts?"+e,i=await fetch(n,{headers:this.headers(t)}),r=await i.json();return this.log(n,r),r},async currenciesChart(t,e="RUB"){const n=`${o}/charts/currencies/${t}.json?base=${e}`,i=await fetch(n),r=await i.json();return this.log(n,r),r},async propertyPricesChart(t,e){const n=o+"/charts/property_prices/"+e,i=await fetch(n,{headers:this.headers(t)}),r=await i.json();return this.log(n,r),r},async currencies(t="RUB"){const e="\n      query($base:String!) {\n        items:currencies(base: $base) {\n          id\n          name\n          displayName\n          description\n          usdRate\n          baseRate\n        }\n      }\n    ",n={base:t},i=await this.client().request(e,n);return this.log(e,i),i.items},async colors(){const t="{ items:colors { id name } }",e=await this.client().request(t);return this.log(t,e),e.items},async ping(){const t="{ ping }",e=await this.client().request(t);return this.log("ping",e),e},async pingMutation(){const t="mutation { pingMutation }",e=await this.client().request(t);return this.log("pingMutation",e),e},client(t){return new i.GraphQLClient(r,{headers:this.headers(t)})},headers(t){return t?{authorization:`Bearer ${t}`}:{}},log(t,e){}}},7941:function(t,e,n){var i=n(5471),o=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"app"}},[e("router-view")],1)},r=[],a={name:"App",components:{}},s=a,c=n(1656),d=(0,c.A)(s,o,r,!1,null,null,null),u=d.exports,m=n(173),l=n(9463),p=n.n(l),I=n(5353),g=n(6957),y=n(6399);const S=[{value:"debit",name:"Дебетовая карта, наличные"},{value:"credit",name:"Кредитная карта"}];var T={namespaced:!0,state:{isLoading:!0,isLoaded:!1,isSubmitting:!1,isDestroying:!1,items:[],itemsFilter:[],isLoadingFilter:!0,isLoadedFilter:!1},getters:{visibleItems:t=>t.items.filter((t=>!t.isHidden)),hiddenItems:t=>t.items.filter((t=>t.isHidden)),visibleItemsFilter:t=>t.itemsFilter.filter((t=>!t.isHidden)),kinds:t=>S},actions:{async fetch({commit:t},e){t("START_LOADING");const n=await y.A.accounts(e);t("FINISH_LOADING",n)},async fetchFilter({commit:t},e){t("START_LOADING_FILTER");const n=await y.A.accountsFilter(e);t("FINISH_LOADING_FILTER",n)},async create({commit:t},{token:e,account:n}){t("START_SUBMITTING");const i=await y.A.createAccount(e,n);return t("FINISH_SUBMITTING"),i},async destroy({commit:t},{token:e,account:n}){try{return t("START_DESTROYING"),await y.A.destroyAccount(e,n.id),t("FINISH_DESTROYING",n),n}catch(i){return console.error(i),t("FINISH_DESTROYING",{}),null}},async toggleIsFavourite({commit:t},{token:e,account:n}){t("START_SUBMITTING");const i=await y.A.toggleIsFavourite(e,n.id,"account");return t("TOGGLE_IS_FAVOURITE",{item:n,isFavourite:i}),t("FINISH_SUBMITTING"),i},async toggleIsHidden({commit:t},{token:e,account:n}){t("START_SUBMITTING");const i=await y.A.toggleIsHidden(e,n.id,"account");return t("TOGGLE_IS_HIDDEN",{item:n,isHidden:i}),t("FINISH_SUBMITTING"),i}},mutations:{START_LOADING(t){t.isLoading=!0},FINISH_LOADING(t,e){t.items=e,t.isLoading=!1,t.isLoaded=!0},START_SUBMITTING(t){t.isSubmitting=!0},FINISH_SUBMITTING(t){t.isSubmitting=!1,t.isLoadedFilter=!1},TOGGLE_IS_FAVOURITE(t,{item:e,isFavourite:n}){const i=t.items.find((t=>t.id===e.id));null!=i&&(i.isFavourite=n)},TOGGLE_IS_HIDDEN(t,{item:e,isHidden:n}){const i=t.items.find((t=>t.id===e.id));null!=i&&(i.isHidden=n)},START_DESTROYING(t){t.isDestroying=!0},FINISH_DESTROYING(t,{id:e}){t.items=t.items.filter((t=>t.id!==e)),t.itemsFilter=t.itemsFilter.filter((t=>t.id!==e)),t.isDestroying=!1},START_LOADING_FILTER(t){t.isLoadingFilter=!0},FINISH_LOADING_FILTER(t,e){t.itemsFilter=e,t.isLoadingFilter=!1,t.isLoadedFilter=!0}}},h={namespaced:!0,state:{isLoading:!0,isLoaded:!1,isSubmitting:!1,isDestroying:!1,items:[]},getters:{isEmpty(t){return 0===t.items.length},visibleItems:t=>t.items.filter((t=>!t.isHidden)),hiddenItems:t=>t.items.filter((t=>t.isHidden))},actions:{async fetch({commit:t},e){t("START_LOADING");const n=await y.A.categories(e);t("FINISH_LOADING",n)},async create({commit:t},{token:e,category:n}){t("START_SUBMITTING");const i=await y.A.createCategory(e,n);return t("FINISH_SUBMITTING"),t("ADD_ITEM",i),i},async destroy({commit:t},{token:e,category:n}){try{return t("START_DESTROYING"),await y.A.destroyCategory(e,n.id),t("FINISH_DESTROYING",n),n}catch{return t("FINISH_DESTROYING",{}),null}},async toggleIsFavourite({commit:t},{token:e,category:n}){t("START_SUBMITTING");const i=await y.A.toggleIsFavourite(e,n.id,"category");return t("TOGGLE_IS_FAVOURITE",{item:n,isFavourite:i}),t("FINISH_SUBMITTING"),i},async toggleIsHidden({commit:t},{token:e,category:n}){t("START_SUBMITTING");const i=await y.A.toggleIsHidden(e,n.id,"category");return t("TOGGLE_IS_HIDDEN",{item:n,isHidden:i}),t("FINISH_SUBMITTING"),i}},mutations:{START_LOADING(t){t.isLoading=!0},FINISH_LOADING(t,e){t.items=e,t.isLoading=!1,t.isLoaded=!0},START_SUBMITTING(t){t.isSubmitting=!0},FINISH_SUBMITTING(t){t.isSubmitting=!1},ADD_ITEM(t,e){t.items=[...t.items,e]},TOGGLE_IS_FAVOURITE(t,{item:e,isFavourite:n}){const i=t.items.find((t=>t.id===e.id));i&&(i.isFavourite=n)},TOGGLE_IS_HIDDEN(t,{item:e,isHidden:n}){const i=t.items.find((t=>t.id===e.id));null!=i&&(i.isHidden=n)},START_DESTROYING(t){t.isDestroying=!0},FINISH_DESTROYING(t,{id:e}){t.items=t.items.filter((t=>t.id!==e)),t.isDestroying=!1}}},_={namespaced:!0,state:{isLoading:!0,isLoaded:!1,items:[]},actions:{async fetch({state:t,commit:e}){if(!t.isLoading)return;if(t.isLoaded&&0!==t.items.length)return;e("START_LOADING");const n=await y.A.colors();e("FINISH_LOADING",n)}},mutations:{START_LOADING(t){t.isLoading=!0,t.isLoaded=!0},FINISH_LOADING(t,e){t.items=e,t.isLoading=!1}}},f={namespaced:!0,state:{base:"RUB",selected:"USD",isLoading:!0,items:[]},getters:{displayedItems:t=>t.items.filter((e=>e.name!==t.base))},actions:{async fetch({commit:t},{base:e}){t("START_LOADING");const n=await y.A.currencies(e);t("FINISH_LOADING",n)}},mutations:{START_LOADING(t){t.isLoading=!0},FINISH_LOADING(t,e){t.items=e,t.isLoading=!1},SET_SELECTED(t,e){t.selected=e}}},N=(n(4603),n(7566),n(8721),{namespaced:!0,state:{accounts:[],categories:[],projects:[],properties:[],dateStart:null,dateEnd:null,period:12},getters:{isVisible:t=>t.categories.length>0||t.accounts.length>0||t.projects.length>0||t.properties.length>0,params:t=>({accountIds:t.accounts.map((t=>t.id)),categoryIds:t.categories.map((t=>t.id)),projectIds:t.projects.map((t=>t.id)),propertyIds:t.properties.map((t=>t.id))}),searchParams:t=>new URLSearchParams({accounts:t.accounts.map((t=>t.id)),categories:t.categories.map((t=>t.id)),projects:t.projects.map((t=>t.id)),properties:t.properties.map((t=>t.id)),months:t.period,dateStart:t.dateStart,dateEnd:t.dateEnd}).toString()},actions:{setAccounts({commit:t},{accounts:e}){t("SET_ACCOUNTS",e)},removeAccount({commit:t},{account:e}){t("REMOVE_ACCOUNT",e)},toggleAccount({commit:t,state:e},{account:n}){e.accounts.find((t=>t.id===n.id))?t("REMOVE_ACCOUNT",n):t("ADD_ACCOUNT",n)},setCategories({commit:t},{categories:e}){t("SET_CATEGORIES",e)},removeCategory({commit:t},{category:e}){t("REMOVE_CATEGORY",e)},toggleCategory({commit:t,state:e},{category:n}){e.categories.find((t=>t.id===n.id))?t("REMOVE_CATEGORY",n):t("ADD_CATEGORY",n)},setProjects({commit:t},{projects:e}){t("SET_PROJECTS",e)},removeProject({commit:t},{project:e}){t("REMOVE_PROJECT",e)},toggleProject({commit:t,state:e},{project:n}){e.projects.find((t=>t.id===n.id))?t("REMOVE_PROJECT",n):t("ADD_PROJECT",n)},setProperties({commit:t},{properties:e}){t("SET_PROPERTIES",e)},removeProperty({commit:t},{property:e}){t("REMOVE_PROPERTY",e)},toggleProperty({commit:t,state:e},{property:n}){e.properties.find((t=>t.id===n.id))?t("REMOVE_PROPERTY",n):t("ADD_PROPERTY",n)},setPeriod({commit:t},{period:e,dateStart:n,dateEnd:i}){t("SET_PERIOD",{period:e,dateStart:n,dateEnd:i})},reset({commit:t}){t("RESET")}},mutations:{SET_ACCOUNTS(t,e){t.accounts=e},ADD_ACCOUNT(t,e){const n=t.accounts.find((t=>t.id===e.id));return!n&&(t.accounts=[...t.accounts,e],!0)},REMOVE_ACCOUNT(t,e){t.accounts=t.accounts.filter((t=>t.id!==e.id))},SET_CATEGORIES(t,e){t.categories=e},ADD_CATEGORY(t,e){const n=t.categories.find((t=>t.id===e.id));return!n&&(t.categories=[...t.categories,e],!0)},REMOVE_CATEGORY(t,e){t.categories=t.categories.filter((t=>t.id!==e.id))},SET_PROJECTS(t,e){t.projects=e},ADD_PROJECT(t,e){const n=t.projects.find((t=>t.id===e.id));return!n&&(t.projects=[...t.projects,e],!0)},REMOVE_PROJECT(t,{id:e}){t.projects=t.projects.filter((t=>t.id!==e))},SET_PROPERTIES(t,e){t.properties=e},ADD_PROPERTY(t,e){const n=t.properties.find((t=>t.id===e.id));return!n&&(t.properties=[...t.properties,e],!0)},REMOVE_PROPERTY(t,{id:e}){t.properties=t.properties.filter((t=>t.id!==e))},SET_PERIOD(t,{period:e,dateStart:n,dateEnd:i}){t.period=e,t.dateStart=n,t.dateEnd=i},RESET(t){t.accounts=[],t.categories=[],t.projects=[]}}}),A={namespaced:!0,state:{isLoading:!0,isLoaded:!1,isSubmitting:!1,isDestroying:!1,items:[]},actions:{async fetch({commit:t},e){t("START_LOADING");const n=await y.A.goals(e);t("FINISH_LOADING",n)},async create({commit:t},{token:e,goal:n}){t("START_SUBMITTING");const i=await y.A.createGoal(e,n);return t("FINISH_SUBMITTING",i),i},async destroy({commit:t},{token:e,goal:n}){try{return t("START_DESTROYING"),await y.A.destroyGoal(e,n.id),t("FINISH_DESTROYING",n),n}catch(i){return console.error(i),t("FINISH_DESTROYING",{}),null}}},mutations:{START_LOADING(t){t.isLoading=!0},FINISH_LOADING(t,e){t.items=e,t.isLoading=!1,t.isLoaded=!0},START_SUBMITTING(t){t.isSubmitting=!0},FINISH_SUBMITTING(t,e){t.items=[...t.items,e],t.isSubmitting=!1},START_DESTROYING(t){t.isDestroying=!0},FINISH_DESTROYING(t,{id:e}){t.items=t.items.filter((t=>t.id!==e)),t.isDestroying=!1}}},E={namespaced:!0,state:{isLoading:!0,isLoaded:!1,isSubmitting:!1,isDestroying:!1,items:[],itemsFilter:[],isLoadingFilter:!0,isLoadedFilter:!1},getters:{visibleItems:t=>t.items.filter((t=>!t.isHidden)),hiddenItems:t=>t.items.filter((t=>t.isHidden)),visibleItemsFilter:t=>t.itemsFilter.filter((t=>!t.isHidden))},actions:{async fetch({commit:t},e){t("START_LOADING");const n=await y.A.projects(e);t("FINISH_LOADING",n)},async create({commit:t},{token:e,project:n}){t("START_SUBMITTING");const i=await y.A.createProject(e,n);return t("FINISH_SUBMITTING",i),i},async destroy({commit:t},{token:e,project:n}){try{return t("START_DESTROYING"),await y.A.destroyProject(e,n.id),t("FINISH_DESTROYING",n),n}catch{return t("FINISH_DESTROYING",{}),null}},async toggleIsHidden({commit:t},{token:e,project:n}){console.log("toggle"),t("START_SUBMITTING"),console.log(e),console.log(n);const i=await y.A.toggleIsHidden(e,n.id,"project");return t("TOGGLE_IS_HIDDEN",{item:n,isHidden:i}),t("FINISH_SUBMITTING"),i},async fetchFilter({commit:t},e){t("START_LOADING_FILTER");const n=await y.A.projectsFilter(e);t("FINISH_LOADING_FILTER",n)}},mutations:{START_LOADING(t){t.isLoading=!0},FINISH_LOADING(t,e){t.items=e,t.isLoading=!1,t.isLoaded=!0},START_SUBMITTING(t){t.isSubmitting=!0},FINISH_SUBMITTING(t){t.isSubmitting=!1,t.isLoadedFilter=!1},START_DESTROYING(t){t.isDestroying=!0},FINISH_DESTROYING(t,{id:e}){t.items=t.items.filter((t=>t.id!==e)),t.itemsFilter=t.itemsFilter.filter((t=>t.id!==e)),t.isDestroying=!1},TOGGLE_IS_HIDDEN(t,{item:e,isHidden:n}){const i=t.items.find((t=>t.id===e.id));null!=i&&(i.isHidden=n)},START_LOADING_FILTER(t){t.isLoadingFilter=!0},FINISH_LOADING_FILTER(t,e){t.itemsFilter=e,t.isLoadingFilter=!1,t.isLoadedFilter=!0}}};const $=[{value:"realty",name:"Недвижимость"},{value:"transport",name:"Транспорт"},{value:"other",name:"Другое"}];var w={namespaced:!0,state:{isLoading:!0,isLoaded:!1,isSubmitting:!1,isDestroying:!1,items:[],itemsFilter:[],isLoadingFilter:!0,isLoadedFilter:!1},getters:{visibleItems:t=>t.items.filter((t=>!t.isHidden)),hiddenItems:t=>t.items.filter((t=>t.isHidden)),visibleItemsFilter:t=>t.itemsFilter.filter((t=>!t.isHidden)),kinds:t=>$},actions:{async fetch({commit:t},e){t("START_LOADING");const n=await y.A.properties(e);t("FINISH_LOADING",n)},async create({commit:t},{token:e,property:n}){t("START_SUBMITTING");const i=await y.A.createProperty(e,n);return t("FINISH_SUBMITTING"),i},async destroy({commit:t},{token:e,property:n}){try{return t("START_DESTROYING"),await y.A.destroyProperty(e,n.id),t("FINISH_DESTROYING",n),n}catch(i){return console.error(i),t("FINISH_DESTROYING",{}),null}},async toggleIsHidden({commit:t},{token:e,property:n}){t("START_SUBMITTING");const i=await y.A.toggleIsHidden(e,n.id,"property");return t("TOGGLE_IS_HIDDEN",{item:n,isHidden:i}),t("FINISH_SUBMITTING"),i},async fetchFilter({commit:t},e){t("START_LOADING_FILTER");const n=await y.A.propertiesFilter(e);t("FINISH_LOADING_FILTER",n)}},mutations:{START_LOADING(t){t.isLoading=!0},FINISH_LOADING(t,e){t.items=e,t.isLoading=!1,t.isLoaded=!0},START_SUBMITTING(t){t.isSubmitting=!0},FINISH_SUBMITTING(t){t.isSubmitting=!1},TOGGLE_IS_HIDDEN(t,{item:e,isHidden:n}){const i=t.items.find((t=>t.id===e.id));null!=i&&(i.isHidden=n)},START_DESTROYING(t){t.isDestroying=!0},FINISH_DESTROYING(t,{id:e}){t.items=t.items.filter((t=>t.id!==e)),t.isDestroying=!1},START_LOADING_FILTER(t){t.isLoadingFilter=!0},FINISH_LOADING_FILTER(t,e){t.itemsFilter=e,t.isLoadingFilter=!1,t.isLoadedFilter=!0}}};const O={realty:"Недвижимость",transport:"Транспорт",other:"Другое"};var D={namespaced:!0,state:{id:null,name:null,kind:null,amount:null,currency:null,totalIncome:null,totalExpense:null,prices:[],transactions:[],isLoading:!0,isLoaded:!1},getters:{kindText:t=>O[t.kind]},actions:{async fetch({commit:t},{token:e,id:n}){t("START_LOADING",n);const i=await y.A.property(e,{id:n});t("FINISH_LOADING",i)},async destroyTransaction({commit:t},{token:e,id:n}){await y.A.destroyTransaction(e,n),t("FINISH_TRANSACTION_DESTROYING",n)},async createPrice({commit:t},{token:e,price:n}){const i=await y.A.createPropertyPrice(e,n);return t("FINISH_PRICE_MODIFICATION"),i},async updatePrice({commit:t},{token:e,price:n}){const i=await y.A.updatePropertyPrice(e,n);return t("FINISH_PRICE_MODIFICATION"),i},async destroyPropertyPrice({commit:t},{token:e,propertyId:n,id:i}){await y.A.destroyPropertyPrice(e,{propertyId:n,id:i}),t("FINISH_PRICE_DESTROYING",i)}},mutations:{START_LOADING(t,e){t.id=e,t.isLoading=!0},FINISH_LOADING(t,e){const{name:n,kind:i,amount:o,currency:r,transactions:a,prices:s,totalIncome:c,totalExpense:d}=e;t.name=n,t.kind=i,t.amount=o,t.currency=r.name,t.transactions=a,t.prices=s,t.totalIncome=c,t.totalExpense=d,t.isLoading=!1,t.isLoaded=!0},FINISH_TRANSACTION_DESTROYING(t,e){t.transactions=t.transactions.filter((t=>t.id!==e))},FINISH_PRICE_MODIFICATION(t){t.isLoading=!0,t.isLoaded=!1},FINISH_PRICE_DESTROYING(t,e){t.prices=t.prices.filter((t=>t.id!==e))}}},P={namespaced:!0,state:{isLoading:!0,isLoadingPage:!1,isSubmitting:!1,isDestroying:!1,items:[],page:1,perPage:50,isMore:!0},actions:{async fetch({commit:t,state:e},{token:n,filters:i}){t("START_LOADING");const{page:o,perPage:r}=e,a=await y.A.transactions(n,{page:o,perPage:r,filters:i});t("FINISH_LOADING",a)},async fetchNext({commit:t,state:e},{token:n,filters:i}){t("START_NEXT_PAGE");const{page:o,perPage:r}=e,a=await y.A.transactions(n,{page:o,perPage:r,filters:i});t("FINISH_NEXT_PAGE",a)},async create({commit:t},{token:e,transaction:n}){t("START_SUBMITTING");const i=await y.A.createTransaction(e,n);return t("FINISH_SUBMITTING",i),i},async createTransfer({commit:t},{token:e,transfer:n}){t("START_SUBMITTING");const i=await y.A.createTransactionTransfer(e,n);return t("FINISH_SUBMITTING",i),i},async destroy({commit:t,state:e},{token:n,transaction:i,filters:o}){try{t("START_DESTROYING"),await y.A.destroyTransaction(n,i.id),t("FINISH_DESTROYING",i);const{page:r,perPage:a}=e,s=await y.A.transactions(n,{page:r,perPage:a,filters:o});return t("FINISH_LOADING",s),i}catch(r){return console.error(r),t("FINISH_DESTROYING",{}),null}}},mutations:{START_LOADING(t){t.isLoading=!0,t.isMore=!0,t.page=1},FINISH_LOADING(t,e){t.items=e,t.isLoading=!1,t.isMore=e.length>=t.perPage},START_SUBMITTING(t){t.isSubmitting=!0},FINISH_SUBMITTING(t,e){t.items=[e,...t.items],t.isSubmitting=!1},START_DESTROYING(t){t.isDestroying=!0},FINISH_DESTROYING(t,{id:e}){t.items=t.items.filter((t=>t.id!==e)),t.isDestroying=!1},START_NEXT_PAGE(t){t.isLoadingPage=!0,t.page=t.page+1},FINISH_NEXT_PAGE(t,e){t.isLoadingPage=!1,t.isMore=e.length>=t.perPage,t.items=[...t.items,...e]}}},G=n(1018);const R={development:"localhost",production:"mybudget.ws"}["production"];var b={set(t,e,n){G.set(`${t}_${e}`,JSON.stringify(n),{expires:365,domain:R,samesite:"Lax"})},get(t,e,n){try{const i=G.get(`${t}_${e}`);if(i){const n=JSON.parse(i);return this.set(t,e,n),n}return n}catch{return n}}};const L="mybudget#store#user";function F(t,e){b.set(L,t,e)}var H={namespaced:!0,state:{email:b.get(L,"email",null),token:b.get(L,"token",null),reportMode:b.get(L,"report_mode","balance"),reportPeriodMonths:b.get(L,"report_period_months",12),currency:void 0},getters:{isSignedIn:t=>null!=t.email&&null!=t.token,isGuest:t=>null!=t.email&&t.email.match(/@2\.mybudget/),defaultCurrency:t=>t?.currency?.name},actions:{async login({commit:t},{email:e,password:n}){const{user:i}=await y.A.login(e,n);return null!=i&&(t("LOGIN",i),!0)},async autoSignUp({commit:t}){const{user:e}=await y.A.autoSignUp();return null!=e&&(t("LOGIN",e),!0)},async registration({commit:t,state:e},{email:n,password:i}){const{token:o}=e,r=await y.A.registration(o,{email:n,password:i});return null==r.user||t("LOGIN",r.user),r},async resetPassword({_commit:t},{email:e}){return await y.A.resetPassword({email:e})},logout({commit:t}){t("LOGOUT")},async fetchProfile({commit:t,state:e}){const{token:n}=e,i=await y.A.fetchProfile(n);if(null!=i)return t("FETCH",i),!0},async updateProfile({state:t},{currency:e}){const{token:n}=t;console.warn("store");const i=await y.A.updateProfile(n,{currency:e});return null!=i},async changeEmail({commit:t,state:e},{newEmail:n,password:i}){const{token:o}=e,r=await y.A.updateEmail(o,{newEmail:n,password:i});return null==r.user||t("LOGIN",r.user),r},async changePassword({commit:t,state:e},{password:n,newPassword:i}){const{token:o}=e,r=await y.A.updatePassword(o,{password:n,newPassword:i});return null!=r&&(t("LOGIN",r),!0)},updateReportMode({commit:t,state:e},{mode:n}){null!=n&&n!=e.reportMode&&t("UPDATE_REPORT_MODE",n)},updateReportPeriodMonths({commit:t,state:e},{months:n}){null!=n&&n!=e.reportPeriodMonths&&t("UPDATE_REPORT_PERIOD_MONTHS",n)}},mutations:{START_LOADING(t){t.isLoading=!0},FINISH_LOADING(t,e){t.items=e,t.isLoading=!1},LOGIN(t,{email:e,token:n}){t.email=e,t.token=n,F("email",t.email),F("token",t.token)},LOGOUT(t){Object.assign(t,{email:null,token:null}),F("email",null),F("token",null)},FETCH(t,e){t.email=e.email,t.currency=e.defaultCurrency},UPDATE_REPORT_MODE(t,e){t.reportMode=e,F("report_mode",e)},UPDATE_REPORT_PERIOD_MONTHS(t,e){t.reportPeriodMonths=e,F("report_period_months",e)}}};const v={greeting:"Hello",name:"World"},k={message(t){return`${t.greeting} ${t.name}!`}},j={greet({getters:t}){alert(t.message)},async ping(){await y.A.ping()},async pingMutation(){await y.A.pingMutation()}},M=g.L8.mutations(v);i.Ay.use(I.Ay);const C=new I.Ay.Store({state:v,getters:k,actions:j,mutations:M,modules:{accounts:T,categories:h,colors:_,currencies:f,filters:N,goals:A,projects:E,properties:w,property:D,transactions:P,user:H},plugins:[g.Ay.plugin]});var U=C;function q(t,e,n){U.getters["user/isSignedIn"]?n():n({path:"/sign_in",query:{redirect:t.fullPath}})}window.store=C,i.Ay.use(p()),i.Ay.use(m.Ay);var B=new m.Ay({base:"/",routes:[{path:"/",name:"home",component:()=>Promise.all([n.e(928),n.e(636)]).then(n.bind(n,7761))},{path:"/privacy",name:"privacy",component:()=>Promise.all([n.e(928),n.e(636)]).then(n.bind(n,5169))},{path:"/agreement",name:"agreement",component:()=>Promise.all([n.e(928),n.e(636)]).then(n.bind(n,7968))},{path:"/sign_in",name:"sign_in",component:()=>Promise.all([n.e(928),n.e(636)]).then(n.bind(n,7890))},{path:"/sign_up",name:"sign_up",component:()=>Promise.all([n.e(928),n.e(636)]).then(n.bind(n,6317))},{path:"/forgot_password",name:"forgot_password",component:()=>Promise.all([n.e(928),n.e(636)]).then(n.bind(n,2118))},{path:"/transactions",name:"transactions",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,4419)),beforeEnter:q},{path:"/transactions/new",name:"new_transaction",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,7955)),beforeEnter:q},{path:"/transactions/:id/edit",name:"edit_transaction",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,5881)),beforeEnter:q},{path:"/transactions/transfers/new",name:"new_transfer",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,9486)),beforeEnter:q},{path:"/accounts",name:"accounts",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,8082)),beforeEnter:q},{path:"/accounts/new",name:"new_account",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,243)),beforeEnter:q},{path:"/accounts/:id/edit",name:"edit_account",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,2350)),beforeEnter:q},{path:"/accounts/:id",name:"show_account",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,3482)),beforeEnter:q},{path:"/reports/:mode?",name:"reports",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,2441)),beforeEnter:q},{path:"/categories",name:"categories",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,4919)),beforeEnter:q},{path:"/categories/new",name:"new_category",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,3490)),beforeEnter:q},{path:"/categories/:id/edit",name:"edit_category",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,1564)),beforeEnter:q},{path:"/budgets",name:"budgets",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,9576)),beforeEnter:q},{path:"/goals",name:"goals",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,1153)),beforeEnter:q},{path:"/goals/:id/edit",name:"edit_goal",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,9222)),beforeEnter:q},{path:"/goals/new",name:"new_goal",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,5944)),beforeEnter:q},{path:"/projects",name:"projects",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,8640)),beforeEnter:q},{path:"/projects/new",name:"new_project",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,2468)),beforeEnter:q},{path:"/projects/:id/edit",name:"edit_project",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,5118)),beforeEnter:q},{path:"/properties",name:"properties",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,6856)),beforeEnter:q},{path:"/properties/new",name:"new_property",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,5508)),beforeEnter:q},{path:"/properties/:id/edit",name:"edit_property",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,7308)),beforeEnter:q},{path:"/properties/:id",name:"show_property",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,8166)),beforeEnter:q},{path:"/properties/:id/prices/new",name:"new_property_price",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,1071)),beforeEnter:q},{path:"/properties/:propertyId/prices/:id/edit",name:"edit_property_price",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,3125)),beforeEnter:q},{path:"/currencies",name:"currencies",component:()=>Promise.all([n.e(928),n.e(61),n.e(168)]).then(n.bind(n,608))},{path:"/settings/:tab",name:"settings",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,2776)),beforeEnter:q},{path:"/finish-sign-up",name:"finish_sign_up",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,9913)),beforeEnter:q},{path:"/helps/iphone-icon",name:"helps_iphone_icon",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,6735))},{path:"/helps/emoji-and-icons-in-categories",name:"helps_emoji_icon_in_categories",component:()=>Promise.all([n.e(928),n.e(61),n.e(253)]).then(n.bind(n,7601))}],scrollBehavior(t,e,n){return n||{x:0,y:0}}}),Y=n(2102),x=n.n(Y),V=n(3123),J=n(6704);n(3492);i.Ay.use(x(),{id:"UA-49766114-6",router:B}),V.Ts({dsn:"https://31a2997a7521403fa04ac9e939bd5bf2@o242649.ingest.sentry.io/5266881",integrations:[new J.IQ.Jh],tracesSampleRate:1}),i.Ay.config.productionTip=!1,new i.Ay({router:B,store:U,render:t=>t(u)}).$mount("#app")}},e={};function n(i){var o=e[i];if(void 0!==o)return o.exports;var r=e[i]={id:i,loaded:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}n.m=t,function(){n.amdD=function(){throw new Error("define cannot be used indirect")}}(),function(){var t=[];n.O=function(e,i,o,r){if(!i){var a=1/0;for(u=0;u<t.length;u++){i=t[u][0],o=t[u][1],r=t[u][2];for(var s=!0,c=0;c<i.length;c++)(!1&r||a>=r)&&Object.keys(n.O).every((function(t){return n.O[t](i[c])}))?i.splice(c--,1):(s=!1,r<a&&(a=r));if(s){t.splice(u--,1);var d=o();void 0!==d&&(e=d)}}return e}r=r||0;for(var u=t.length;u>0&&t[u-1][2]>r;u--)t[u]=t[u-1];t[u]=[i,o,r]}}(),function(){n.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return n.d(e,{a:e}),e}}(),function(){n.d=function(t,e){for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})}}(),function(){n.f={},n.e=function(t){return Promise.all(Object.keys(n.f).reduce((function(e,i){return n.f[i](t,e),e}),[]))}}(),function(){n.u=function(t){return"js/"+({168:"home-group",253:"inner",636:"landing"}[t]||t)+"."+{61:"315bbfcb",168:"e89807b7",253:"fce58088",636:"3c314a4a",928:"c84a3447"}[t]+".js"}}(),function(){n.miniCssF=function(t){return"css/"+{168:"home-group",253:"inner",636:"landing"}[t]+"."+{168:"7b0f5dcf",253:"a030d588",636:"f8909a35"}[t]+".css"}}(),function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}()}(),function(){n.hmd=function(t){return t=Object.create(t),t.children||(t.children=[]),Object.defineProperty(t,"exports",{enumerable:!0,set:function(){throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+t.id)}}),t}}(),function(){n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}}(),function(){var t={},e="mybudget2:";n.l=function(i,o,r,a){if(t[i])t[i].push(o);else{var s,c;if(void 0!==r)for(var d=document.getElementsByTagName("script"),u=0;u<d.length;u++){var m=d[u];if(m.getAttribute("src")==i||m.getAttribute("data-webpack")==e+r){s=m;break}}s||(c=!0,s=document.createElement("script"),s.charset="utf-8",s.timeout=120,n.nc&&s.setAttribute("nonce",n.nc),s.setAttribute("data-webpack",e+r),s.src=i),t[i]=[o];var l=function(e,n){s.onerror=s.onload=null,clearTimeout(p);var o=t[i];if(delete t[i],s.parentNode&&s.parentNode.removeChild(s),o&&o.forEach((function(t){return t(n)})),e)return e(n)},p=setTimeout(l.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=l.bind(null,s.onerror),s.onload=l.bind(null,s.onload),c&&document.head.appendChild(s)}}}(),function(){n.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}}(),function(){n.nmd=function(t){return t.paths=[],t.children||(t.children=[]),t}}(),function(){n.p="/"}(),function(){if("undefined"!==typeof document){var t=function(t,e,i,o,r){var a=document.createElement("link");a.rel="stylesheet",a.type="text/css",n.nc&&(a.nonce=n.nc);var s=function(n){if(a.onerror=a.onload=null,"load"===n.type)o();else{var i=n&&n.type,s=n&&n.target&&n.target.href||e,c=new Error("Loading CSS chunk "+t+" failed.\n("+i+": "+s+")");c.name="ChunkLoadError",c.code="CSS_CHUNK_LOAD_FAILED",c.type=i,c.request=s,a.parentNode&&a.parentNode.removeChild(a),r(c)}};return a.onerror=a.onload=s,a.href=e,i?i.parentNode.insertBefore(a,i.nextSibling):document.head.appendChild(a),a},e=function(t,e){for(var n=document.getElementsByTagName("link"),i=0;i<n.length;i++){var o=n[i],r=o.getAttribute("data-href")||o.getAttribute("href");if("stylesheet"===o.rel&&(r===t||r===e))return o}var a=document.getElementsByTagName("style");for(i=0;i<a.length;i++){o=a[i],r=o.getAttribute("data-href");if(r===t||r===e)return o}},i=function(i){return new Promise((function(o,r){var a=n.miniCssF(i),s=n.p+a;if(e(a,s))return o();t(i,s,null,o,r)}))},o={524:0};n.f.miniCss=function(t,e){var n={168:1,253:1,636:1};o[t]?e.push(o[t]):0!==o[t]&&n[t]&&e.push(o[t]=i(t).then((function(){o[t]=0}),(function(e){throw delete o[t],e})))}}}(),function(){var t={524:0};n.f.j=function(e,i){var o=n.o(t,e)?t[e]:void 0;if(0!==o)if(o)i.push(o[2]);else{var r=new Promise((function(n,i){o=t[e]=[n,i]}));i.push(o[2]=r);var a=n.p+n.u(e),s=new Error,c=function(i){if(n.o(t,e)&&(o=t[e],0!==o&&(t[e]=void 0),o)){var r=i&&("load"===i.type?"missing":i.type),a=i&&i.target&&i.target.src;s.message="Loading chunk "+e+" failed.\n("+r+": "+a+")",s.name="ChunkLoadError",s.type=r,s.request=a,o[1](s)}};n.l(a,c,"chunk-"+e,e)}},n.O.j=function(e){return 0===t[e]};var e=function(e,i){var o,r,a=i[0],s=i[1],c=i[2],d=0;if(a.some((function(e){return 0!==t[e]}))){for(o in s)n.o(s,o)&&(n.m[o]=s[o]);if(c)var u=c(n)}for(e&&e(i);d<a.length;d++)r=a[d],n.o(t,r)&&t[r]&&t[r][0](),t[r]=0;return n.O(u)},i=self["webpackChunkmybudget2"]=self["webpackChunkmybudget2"]||[];i.forEach(e.bind(null,0)),i.push=e.bind(null,i.push.bind(i))}();var i=n.O(void 0,[504],(function(){return n(7941)}));i=n.O(i)})();
//# sourceMappingURL=app.c9f75694.js.map